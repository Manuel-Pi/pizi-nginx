
user pizi;
# Should be one by CPU core (check:# nproc)
worker_processes 1;

events {
    # Should be equal or lower than the maximum file that can be opened by a core (check:# ulimit -n)
    worker_connections 10000;
}

http {

    include mime.types;

    # response compression
    gzip on;
    gzip_comp_level 3;
    gzip_types text/css;
    gzip_types text/javascript;
    gzip_types text/html;
    gzip_types text/plain;
    gzip_types text/xml;
    gzip_types application/javascript;

    # micro cache (proxy)
    proxy_cache_path /etc/nginx/nginx_cache levels=1:2 keys_zone=FAST_CACHE:100m inactive=60m;
    proxy_cache_key "$request_uri";
    add_header X-Cache $upstream_cache_status;

    # buffering (increase perfs for large number of static files)
    # read static files direct from disk
    #sendfile on;
    # optimize sendfile packets
    #tcp_nopush on;


    server {
        listen       80;
        server_name  _;
        return 301 https://$host$request_uri;
    }

    server {
        listen       443 ssl;
        server_name  _;
        root         /home/pizi/pizi-express-server/apps/;

        ssl_certificate     /home/pizi/certs/cert.pem;
        ssl_certificate_key /home/pizi/certs/cert.key;

        # cache response
        proxy_cache FAST_CACHE;
        proxy_cache_valid 200 5m;
        proxy_cache_valid 404 5m;

        # redirect root
        location = / {
            return 307 "/server";
        }

        # pizi-api
        location ^~ /api {
            alias /home/pizi/pizi-express-server/apis;
        }

        # pizi-rest
        location ^~ /pizi-rest {
            include proxy_pizi_server.conf;
        }

        # socket.io
        location ^~ /socket.io {
            include proxy_pizi_server.conf;
        }

        # client cache
        location ~* \.(css|js|jpg|jpeg|png|svg){
            access_log off;
            add_header Cache-Control public;
            add_header Pragma public;
            add_header Vary Accept-Encoding;
            expires 1d;
        }
    }
}
